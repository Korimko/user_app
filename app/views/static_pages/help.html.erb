<!DOCTYPE html>
<meta charset="utf-8">
<style>

.subunit.AUZ { fill: #cdc; }
.subunit.AUA { fill: #cdc; }
.place,
.place-label {
	fill: #444;
}

text {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 5px;
  pointer-events: none;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v0.min.js"></script>
<div class="center hero-unit" id="map"></div>
<script>

var width = 960,
    height =760;

var projection = d3.geo.mercator()
	.center([135,-30])
	.scale(1000)
	.translate([width / 2, height / 2])
	.precision(.1);

var path = d3.geo.path()
	.projection(projection)
	//.pointRadius(2);

var svg = d3.select("#map").append("svg")
    .attr("width", width)
    .attr("height", height);

var g = svg.append("g");

d3.json("assets/aus.json", function(error, aus) {
    g.selectAll("path")
		.data(topojson.object(aus, aus.objects.subunits).geometries)
		.enter()
		.append("path")
		.attr("class", function(d) { return "subunit " + d.id; })
		.attr("d", path);
	g.selectAll(".place")
		.data(topojson.object(aus, aus.objects.places).geometries)
	.enter().append("circle")
		.attr("d", path)
		.attr("transform", function(d) { return "translate(" + projection(d.coordinates) + ")"; })
		.attr("r", 1.5)
		.attr("class", "place");

	g.selectAll(".place-label")
      .data(topojson.object(aus, aus.objects.places).geometries)
    .enter().append("text")
      .attr("class", "place-label")
      .attr("transform", function(d) { return "translate(" + projection(d.coordinates) + ")"; })
      .attr("x", function(d) { return d.coordinates[0] > 135 ? 6 : -6; })
      .attr("dy", ".35em")
      .style("text-anchor", function(d) { return d.coordinates[0] > 135 ? "start" : "end"; })
      .text(function(d) { return d.properties.name; });

});

var zoom = d3.behavior.zoom()
    .on("zoom",function() {
        g.attr("transform","translate("+ 
            d3.event.translate.join(",")+")scale("+d3.event.scale+")");
        g.selectAll("path")  
            .attr("d", path.projection(projection)); 
  });

svg.call(zoom)


</script>
</body>
</html>
